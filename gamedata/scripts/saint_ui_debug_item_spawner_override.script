itm_to_spawn_classes = {
	-- kind
	["i_arty_junk"]     = "Artefacts",
	["i_arty"]          = "Artefacts",
	["ARTEFACT"]        = "Artefacts",
	["SCRPTART"]        = "Artefacts",

	["i_arty_cont"]     = "Artefacts (Container)",

	["i_mutant_cooked"] = "Items (Food)",
	["i_mutant_raw"]    = "Items (Food)",
	["i_food"]          = "Items (Food)",
	["II_FOOD"]         = "Items (Food)",
	["S_FOOD"]          = "Items (Food)",

	["i_drink"]         = "Items (Drink)",
	["II_BOTTL"]        = "Items (Drink)",

	["i_medical"]       = "Items (Medical)",
	["II_BANDG"]        = "Items (Medical)",
	["II_MEDKI"]        = "Items (Medical)",
	["II_ANTIR"]        = "Items (Medical)",

	["i_device"]        = "Items (Device)",
	["DET_SIMP"]        = "Items (Device)",
	["DET_ADVA"]        = "Items (Device)",
	["DET_ELIT"]        = "Items (Device)",
	["DET_SCIE"]        = "Items (Device)",

	["i_kit"]           = "Items (Tool)",
	["i_tool"]          = "Items (Tool)",

	["i_repair"]        = "Items (Repair)",

	["i_part"]          = "Items (Parts)",

	["i_mutant_part"]   = "Items (Misc.)",
	["i_misc"]          = "Items (Misc.)",
	["II_DOC"]          = "Items (Misc.)",
	["EQ_PATCH"]        = "Items (Misc.)",
	["II_ATTCH"]        = "Items (Misc.)",
	["II_BTTCH"]        = "Items (Misc.)",
	["D_FLALIT"]        = "Items (Misc.)",
	["S_PDA"]           = "Items (Misc.)",
	["D_PDA"]           = "Items (Misc.)",

	["i_letter"]        = "Items (Note)",

	["i_quest"]         = "Items (Quest)",

	["i_upgrade"]       = "Items (Upgrades)",

	["o_helmet"]        = "Helmets",
	["E_HLMET"]         = "Helmets",
	["EQU_HLMET"]       = "Helmets",

	["i_mutant_belt"]   = "Outfits (Attachments)",
	["i_attach"]        = "Outfits (Attachments)",
	["i_backpack"]      = "Outfits (Attachments)",
	["EQ_BAKPK"]        = "Outfits (Attachments)",

	["o_light"]         = "Outfits (Light)",

	["E_STLK"]          = "Outfits (Medium)",
	["EQU_STLK"]        = "Outfits (Medium)",
	["o_medium"]        = "Outfits (Medium)",
	["o_sci"]           = "Outfits (Medium)",

	["o_heavy"]         = "Outfits (Heavy)",

	["w_ammo"]          = "Weapons (Ammo)",
	["AMMO"]            = "Weapons (Ammo)",
	["AMMO_S"]          = "Weapons (Ammo)",
	["S_OG7B"]          = "Weapons (Ammo)",
	["S_VOG25"]         = "Weapons (Ammo)",
	["S_M209"]          = "Weapons (Ammo)",

	["w_melee"]         = "Weapons (Melee)",
	["WP_KNIFE"]        = "Weapons (Melee)",

	["w_pistol"]        = "Weapons (Pistol)",
	["WP_HPSA"]         = "Weapons (Pistol)",
	["WP_PM"]           = "Weapons (Pistol)",
	["WP_USP45"]        = "Weapons (Pistol)",

	["w_shotgun"]       = "Weapons (Shotgun)",
	["WP_ASHTG"]        = "Weapons (Shotgun)",
	["WP_BM16"]         = "Weapons (Shotgun)",

	["w_smg"]           = "Weapons (SMG)",

	["w_rifle"]         = "Weapons (Rifle)",
	["WP_AK74"]         = "Weapons (Rifle)",
	["WP_GROZA"]        = "Weapons (Rifle)",
	["WP_LR300"]        = "Weapons (Rifle)",
	["WP_VAL"]          = "Weapons (Rifle)",

	["w_sniper"]        = "Weapons (Sniper)",
	["WP_SVD"]          = "Weapons (Sniper)",
	["WP_SVU"]          = "Weapons (Sniper)",

	["w_explosive"]     = "Weapons (Explosive)",
	["WP_RG6"]          = "Weapons (Explosive)",
	["WP_RPG7"]         = "Weapons (Explosive)",
	["G_F1_S"]          = "Weapons (Explosive)",
	["G_RGD5_S"]        = "Weapons (Explosive)",
	["G_F1"]            = "Weapons (Explosive)",
	["G_RGD5"]          = "Weapons (Explosive)",

	["w_base"]          = "Weapons (Misc.)",
	["w_misc"]          = "Weapons (Misc.)",
	["WP_SCOPE"]        = "Weapons (Misc.)",
	["WP_SILEN"]        = "Weapons (Misc.)",
	["WP_GLAUN"]        = "Weapons (Misc.)",
	["S_WPN_MISC"]      = "Weapons (Misc.)",
	["WP_BINOC"]        = "Weapons (Misc.)",
	["II_BOLT"]         = "Weapons (Misc.)",
}

local spawn_item_table_list

function ui_debug_launcher.get_spawn_table(name)
	if (spawn_item_table_list and spawn_item_table_list[name]) then
		return spawn_item_table_list[name]
	end

	spawn_item_table_list = {
		["Artefacts"]             = {},
		["Artefacts (Container)"] = {},
		["Items (Food)"]          = {},
		["Items (Drink)"]         = {},
		["Items (Medical)"]       = {},
		["Items (Device)"]        = {},
		["Items (Tool)"]          = {},
		["Items (Repair)"]        = {},
		["Items (Parts)"]         = {},
		["Items (Misc.)"]         = {},
		["Items (Note)"]          = {},
		["Items (Quest)"]         = {},
		["Items (Upgrades)"]      = {},
		["Helmets"]               = {},
		["Outfits (Attachments)"] = {},
		["Outfits (Light)"]       = {},
		["Outfits (Medium)"]      = {},
		["Outfits (Heavy)"]       = {},
		["Weapons (Ammo)"]        = {},
		["Weapons (Melee)"]       = {},
		["Weapons (Pistol)"]      = {},
		["Weapons (Shotgun)"]     = {},
		["Weapons (SMG)"]         = {},
		["Weapons (Rifle)"]       = {},
		["Weapons (Sniper)"]      = {},
		["Weapons (Explosive)"]   = {},
		["Weapons (Misc.)"]       = {},
	}

	local blacklist = ini_file("plugins\\spawner_blacklist.ltx")

	ini_sys:section_for_each(function(section)
		if (not blacklist:line_exist("ignore_sections", section))
			and (not string.find(section, "tch_"))
			and (not string.find(section, "mp_"))
			and (not string.find(section, "_base"))
			and (not string.find(section, "_snd"))
			and (not string.find(section, "_sound"))
			and (not string.find(section, "_actor"))
		then
			local class = ini_sys:r_string_ex(section, "class")
			local kind = ini_sys:r_string_ex(section, "kind")

			if kind then
				class = kind
			end

			if not class then
				return false
			end

			if class == "II_FOOD" and string.find(section, "wpn") then
				-- Filter out misclassified stub items using default class assignment, should be fixed by author.
				return false
			end

			local type = itm_to_spawn_classes[class]

			if not type then
				return false
			end

			if (string.find(type, "Items")) then
				if (ini_sys:r_bool_ex(section, "quest_item", false) == true) then
					type = "Items (Quest)"
				end
			elseif (string.find(type, "Weapons")) and (type ~= "Weapons (Misc.)") then
				local parent_section = ini_sys:r_string_ex(section, "parent_section") or section
				if (parent_section ~= section) then
					type = "na"
				end
			end

			local scope = ini_sys:r_string_ex(section, "description")

			if (scope and scope:find("st_dxr_addon_scope_")) then
				type = "Weapons (Misc.)"
			end

			if (spawn_item_table_list[type]) then
				local w = ini_sys:r_float_ex(section, "inv_grid_width") or 1
				local h = ini_sys:r_float_ex(section, "inv_grid_height") or 1

				if w and h and w > 0 and h > 0 then
					spawn_item_table_list[type][#spawn_item_table_list[type] + 1] = { sec = section, w = w, h = h }
				end
			end
		end

		return false
	end
	)

	return spawn_item_table_list[name]
end
